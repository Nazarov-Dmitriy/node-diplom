<form method="POST" class="mt-5" enctype="multipart/form-data">
    <div class="form-group">
        <label for="inputShortText">Заголовок</label>
        <input type="text" value="<%= advertisement.shortText %>" name="shortText" class="form-control"
            id="inputShortText">
    </div>

    <div class="form-group">
        <label for="inputDesc">Описание</label>
        <textarea rows="3" name="description" value="<%= advertisement.description %>" class="form-control"
            id="inputDesc"><%= advertisement.description %></textarea>
    </div>
    <div class="form-group">
        <div class="list-images d-flex align-self-stretch flex-wrap">
            <% let arr =advertisement.images || []  %>
            <% if(arr.length>0 ){ %>
            <% arr.map((el, idx) => {  %>
            <% let name =el.split('/')[2] || ''  %>
            <div class="position-relative mb-3" style="width: 31%; margin-right:1% ; margin-left:1%">
                <img src="/images/<%= name%>" class="img-fluid img-thumbnail" alt="<%=name %>"
                    style="object-fit: cover;width: 100%;  height: 100px;">
                <button type="button" onclick="removeImg(event)" ; id="<%= el.split('/')[2] %>"
                    class="close position-absolute btn-close-black" aria-label="Close"
                    style="top: 5px;right: 14px;outline: 0 !important;">
                    <span>&times;</span>
                </button>
            </div>
            <% })} %>
        </div>
    </div>

    <div class="form-group">
        <label for="inputImages">Фотографии</label>
        <input type="file" name="images" class="form-control" id="inputImages" multiple="multiple" accept="image/*">
    </div>

    <div class="form-group">
        <label for="inputTags">Тэги</label>
        <input type="text" value="<%= advertisement.tags %>" name="tags" class="form-control" id="inputTags">
    </div>



    <script>
        let arr = [];
        let input = document.getElementById('inputImages');


        async function addFileInputbase() {
            let imgBD = document.querySelectorAll('.img-fluid');
            let dt = new DataTransfer();
            let file_list;

            Array.from(imgBD).map(async (item) => {
                let blob = await fetch(item.getAttribute('src'))
                    .then(response => response.blob())

                let file = new File([blob], item.getAttribute('src').slice(1), {
                    type: 'image/jpeg'
                });
                dt.items.add(file);
                let file_list = dt.files;
                arr.push(file);
                document.getElementById('inputImages').files = file_list
            })
        }

        addFileInputbase();


        function removeImg(e) {
            e.target.closest('.position-relative').remove();
            let id = e.target.closest('.close').getAttribute('id');
            let arrFillter = arr.filter(item => item.name !== id);
            arr = arrFillter;
            addFileInput();
        }

        function addFileInput() {
            let dt = new DataTransfer();
            arr.map(item => {
                let file = new File([item], item.name, {
                    type: 'image/jpeg'
                });
                dt.items.add(file);
            })
            let file_list = dt.files;

            document.getElementById('inputImages').files = file_list
        }

        function addFile(file) {
            let reader = new FileReader();

            reader.addEventListener("load", function (e) {
                let url = e.target.result;

                document.querySelector('.list-images').insertAdjacentHTML("beforeEnd",
                    `<div class="position-relative mb-3" style="width: 31%; margin-right:1% ; margin-left:1%">
                                <img src=${url} class="img-fluid img-thumbnail" alt=${file.name} style="object-fit: cover;width: 100%;  height: 100px;" >
                                <button type="button"  onclick="removeImg(event)"; id=${file.name} class="close position-absolute btn-close-black" aria-label="Close" style="top: 5px;right: 14px;outline: 0 !important;">
                                    <span >&times;</span>
                                </button>
                             </div>`);
            });
            reader.readAsDataURL(file);
        }

        input.addEventListener('change', (evt) => {
            if (evt.target.files.length > 0) {
                for (const item of evt.target.files) {
                    let file = item;
                    if (arr.length > 0) {
                        let elem = arr.find(item => item.name === file.name);
                        if (elem === undefined) {
                            arr.push(file);
                            addFile(file)
                        }
                    } else {
                        arr.push(file);
                        addFile(file);
                    }
                }
                addFileInput();

            }
        })
    </script>